name: Code Coverage (PHP)

on:
  push:
    branches:
      - main
    paths:
      - '**/*.php'

  pull_request:
    branches:
      - main
    paths:
      - '**/*.php'

  workflow_dispatch:
    inputs:
      custom_username:
        description: 'Enter custom username (default is "default-user")'
        required: false
        default: 'default-user'
      project_id:
        description: 'Enter project ID (default is "default-project")'
        required: false
        default: 'default-project'

jobs:
  test:
    name: Run Tests and Upload Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug

      - name: Ensure composer.json exists
        run: |
          if [ ! -f "composer.json" ]; then
            echo "composer.json not found. Creating a default one..."
            cat << 'EOL' > composer.json
{
    "name": "default/project",
    "description": "Auto-generated composer.json",
    "require": {
        "php": ">=8.0"
    },
    "require-dev": {
        "phpunit/phpunit": "^10.0"
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    }
}
EOL
          fi

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist

      - name: Run tests with coverage
        run: |
          mkdir -p coverage-report
          ./vendor/bin/phpunit --coverage-html coverage-report --coverage-text --coverage-clover coverage-report/coverage.xml || true

      - name: Debug Coverage Text Output
        run: |
          echo "Text Coverage Report:"
          cat coverage-report/index.html || echo "No coverage report found."

      - name: Extract Coverage Percentage
        id: extract-coverage
        run: |
          COVERAGE=$(grep -oP 'line-rate="([0-9]+\.[0-9]+)"' coverage-report/coverage.xml | head -1 | grep -oP '[0-9]+\.[0-9]+')
          if [[ -z "$COVERAGE" ]]; then
            echo "Coverage percentage not found, defaulting to 0%"
            COVERAGE=0
          fi
          echo "Coverage Percentage: $COVERAGE%"
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV

      - name: Move coverage reports to docs/
        run: |
          USERNAME="${{ github.event.inputs.custom_username || 'default-user' }}"
          PROJECT_ID="${{ github.event.inputs.project_id || 'default-project' }}"
          DOCS_FOLDER="docs/${USERNAME}/${PROJECT_ID}/code_coverage"
          mkdir -p "$DOCS_FOLDER"
          cp -r coverage-report/* "$DOCS_FOLDER/"

      - name: Upload Coverage Reports as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: docs/${{ github.event.inputs.custom_username || 'default-user' }}/

      - name: Commit and Push Coverage Reports to GitHub Pages
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          USERNAME="${{ github.event.inputs.custom_username || 'default-user' }}"
          PROJECT_ID="${{ github.event.inputs.project_id || 'default-project' }}"
          git add docs/$USERNAME/$PROJECT_ID/
          git commit -m "Update coverage reports for $USERNAME"
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} main

      - name: Call API to Insert Quality Score
        run: |
          API_URL="https://dolphin-app-uzion.ondigitalocean.app/api/setCoverage?clientpublic=baef7468287a44d8ac3634026d9fb8d1&clientsecret=181a2f3171117c1bd164c88b1171c1b83114fc1712121b12"
          USER_ID="${{ github.event.inputs.custom_username || 'default-user' }}"    
          PROJECT_ID="${{ github.event.inputs.project_id || 'default-project' }}"
          LAST_REQUEST_TIME="$(date +%s)000"
          curl -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            -d "{
              \"userid\": \"$USER_ID\",
              \"projectid\": \"$PROJECT_ID\",
              \"recordtime\": \"$LAST_REQUEST_TIME\",
              \"coverage\": \"${{ env.COVERAGE }}\"
            }"

      - name: Clean up coverage directory
        run: rm -rf coverage-report/
